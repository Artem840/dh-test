{"version":3,"sources":["findIndexById.ts","redux/contentReducer.ts","redux/hooks.ts","styles.ts","components/TreeItem.tsx","components/Tree.tsx","components/ContentList.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["findIndexById","data","id","result","forEach","item","index","push","children","length","nodeIndex","fetchContentList","createAsyncThunk","a","fetch","process","then","response","json","fetchContentItem","contentSlice","createSlice","name","initialState","isLoading","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","path","parent","i","selectContent","content","contentReducer","reducer","useAppDispatch","useDispatch","useAppSelector","useSelector","Header","styled","PageHeader","StyledTreeItem","div","isFile","level","Container","Content","TreeItem","dataItem","dispatch","useState","isOpen","setIsOpen","setIsLoading","title","isCollapsed","undefined","handleClick","resultAction","unwrapResult","console","data-level","onClick","Tree","map","ContentList","size","type","description","App","useEffect","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f4655a7.chunk.js","sourcesContent":["import { ContentItemDTO } from \"./redux/contentReducer\";\r\n\r\nexport const findIndexById = (data: ContentItemDTO[], id: number): number[] | void => {\r\n    const result: number[] = []\r\n    data.forEach((item, index) => {\r\n        if (item.id === id) {\r\n            result.push(index)\r\n        } else if (item.children && item.children.length > 0) {\r\n            const nodeIndex = findIndexById(item.children, id)\r\n            if (nodeIndex) {\r\n                result.push(index)\r\n                result.push(...nodeIndex)\r\n            }\r\n        }\r\n    })\r\n    if (result.length > 0) {\r\n        return result\r\n    }\r\n    return\r\n}","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { findIndexById } from \"../findIndexById\";\r\nimport { RootState } from \"./store\";\r\n\r\nexport interface ContentItemDTO {\r\n    id: number\r\n    title: string\r\n    children: ContentItemDTO[] | []\r\n}\r\n\r\ninterface ContentState {\r\n    data: ContentItemDTO[] | []\r\n    isLoading: boolean\r\n    error?: string\r\n}\r\n\r\nconst initialState: ContentState = {\r\n    data: [],\r\n    isLoading: true,\r\n    error: ''\r\n}\r\n\r\nexport const fetchContentList = createAsyncThunk(\r\n    'content/fetchContentList',\r\n    async () => \r\n        await fetch(`${process.env.REACT_APP_API_HOST}/content`).then(\r\n            (response) => response.json()\r\n        ) as Promise<ContentItemDTO>\r\n)\r\n\r\nexport const fetchContentItem = createAsyncThunk(\r\n    'content/fetchContentItem',\r\n    async (id: number) => \r\n        await fetch(`${process.env.REACT_APP_API_HOST}/content?dirId=${id}`).then(\r\n            (response) => response.json()\r\n        ) as Promise<ContentItemDTO>\r\n) \r\n\r\nconst contentSlice = createSlice({\r\n    name: 'content',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchContentList.pending, (state) => {\r\n                state.isLoading = true\r\n            })\r\n            .addCase(fetchContentList.fulfilled, (state, action) => {\r\n                state.data = [...action.payload.children]\r\n                state.isLoading = false\r\n            })\r\n            .addCase(fetchContentList.rejected, (state, action) => {\r\n                state.isLoading = false\r\n                state.error = action.error.message\r\n            })\r\n            \r\n            .addCase(fetchContentItem.fulfilled, (state, action) => {\r\n                const path = findIndexById(state.data, action.payload.id)\r\n                if (path) {\r\n                    if (path.length > 1) {\r\n                        let parent: any = state.data;\r\n                        for (let i = 0; i < path.length - 1; i++) {\r\n                            if (i === 0) {\r\n                                parent = parent[path[i]]\r\n                            } else {\r\n                                parent = parent.children[path[i]]\r\n                            }\r\n                        }\r\n                        parent.children[path[path.length - 1]] = action.payload\r\n                    } else {\r\n                        state.data[path[0]] = action.payload\r\n                    }\r\n                }\r\n            })\r\n    }\r\n})\r\n\r\nexport const selectContent = (state: RootState) => state.content\r\n\r\nexport const contentReducer = contentSlice.reducer","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport type { RootState, AppDispatch } from \"./store\";\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import styled from 'styled-components'\r\nimport { PageHeader } from \"antd\";\r\nimport { Content } from 'antd/lib/layout/layout';\r\n\r\nexport const Header = styled(PageHeader)`\r\n    border-bottom: 1px solid rgb(235, 237, 240);\r\n`\r\n\r\ninterface StyledTreeProps {\r\n    isFile?: boolean\r\n    level: number\r\n}\r\n\r\nexport const StyledTreeItem = styled.div<StyledTreeProps>`\r\n  color: ${({ isFile }) => isFile ? 'red' : 'blue'};\r\n  cursor: pointer;\r\n  margin-left: ${({ level }) => level * 8}px;\r\n  pointer-events: ${({ isFile }) => isFile && 'none'};\r\n`\r\n\r\nexport const Container = styled(Content)`\r\n  width: 100%;\r\n  max-width: 290px;\r\n  margin: 100px auto 0;\r\n`","import { FC, useState } from \"react\";\r\nimport { Tree } from \"./Tree\";\r\nimport { useAppDispatch } from \"../redux/hooks\";\r\nimport { ContentItemDTO, fetchContentItem } from \"../redux/contentReducer\";\r\nimport { StyledTreeItem } from \"../styles\";\r\nimport { unwrapResult } from \"@reduxjs/toolkit\";\r\nimport { Spin } from \"antd\";\r\n\r\ninterface Props {\r\n    dataItem: ContentItemDTO\r\n    level: number\r\n}\r\n\r\nexport const TreeItem: FC<Props> = ({ dataItem, level }) => {\r\n    const dispatch = useAppDispatch()\r\n    const [isOpen, setIsOpen] = useState<boolean>(false)\r\n    const [isLoading, setIsLoading] = useState<boolean>(false)\r\n\r\n    const { id, title, children } = dataItem;\r\n    const isCollapsed = children !== undefined && children.length > 0\r\n\r\n    const handleClick = async (id: number) => {\r\n        if (!isCollapsed) {\r\n            try {\r\n                setIsLoading(true)\r\n                const resultAction = await dispatch(fetchContentItem(id))\r\n                unwrapResult(resultAction)\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch content: \", error);\r\n                setIsLoading(false)\r\n            } finally {\r\n                setIsLoading(false)\r\n                setIsOpen(true)\r\n            }\r\n        } else {\r\n            setIsOpen(!isOpen)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledTreeItem\r\n            key={`${level}_${id}`}\r\n            data-level={`${level}_${id}`}\r\n            level={level}\r\n            isFile={!children}\r\n        >\r\n            {isLoading && <Spin />}<span onClick={() => handleClick(id)}>{title}</span>\r\n            {isOpen && isCollapsed && <Tree data={children} level={level + 1}/>}\r\n        </StyledTreeItem>\r\n    )\r\n}","import { FC } from \"react\"\r\nimport { ContentItemDTO } from \"../redux/contentReducer\"\r\nimport {TreeItem} from \"./TreeItem\";\r\n\r\ninterface Props {\r\n    data: ContentItemDTO[]\r\n    level: number\r\n}\r\n\r\nexport const Tree: FC<Props> = ({ data, level }) => (\r\n    <>\r\n        {data.map((dataItem) => <TreeItem key={dataItem.id} dataItem={dataItem} level={level} />)}\r\n    </>\r\n)","import { FC } from \"react\";\r\nimport {Alert, Empty, Spin} from \"antd\";\r\nimport { Tree } from \"./Tree\";\r\nimport { useAppSelector } from \"../redux/hooks\";\r\nimport { selectContent } from \"../redux/contentReducer\";\r\n\r\nexport const ContentList: FC = () => {\r\n    const { data, isLoading, error } = useAppSelector(selectContent)\r\n\r\n    if (isLoading) {\r\n        return <Spin size=\"large\" />\r\n    }\r\n\r\n    if (error) {\r\n        return <Alert message={error} type=\"error\" />\r\n    }\r\n\r\n    if (!data) {\r\n        return <Empty description={'Нет данных'} />\r\n    }\r\n\r\n    return <Tree data={data} level={0} />\r\n}","import { useEffect } from \"react\"\nimport { fetchContentList } from \"./redux/contentReducer\"\nimport { useAppDispatch } from \"./redux/hooks\"\nimport { Container, Header } from \"./styles\"\nimport { ContentList } from \"./components/ContentList\";\n\nexport const App = () => {\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    dispatch(fetchContentList())\n  }, [dispatch])\n  \n  return (\n    <>\n      <Header title=\"DH Test\" />\n      <Container>\n        <ContentList />\n      </Container>\n    </>\n  )\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { contentReducer } from \"./contentReducer\";\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        content: contentReducer\r\n    }\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport \"antd/dist/antd.css\";\nimport \"./index.css\"\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}